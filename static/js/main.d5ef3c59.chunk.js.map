{"version":3,"sources":["App.tsx","components/Goodlist.tsx","index.tsx"],"names":["SortType","Goodlist","goods","map","good","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setType","visibleGoods","sort","f1","f2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0ECdQC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,SDJFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASP,EAASU,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMV,EA7CD,SACLA,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOX,GAezB,OAbAW,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKX,EAASiB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAINZ,EACHK,EAAaQ,UACbR,EAwBUS,CAAkBjB,EAAiB,CAAEM,WAAUH,eAE7D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAxBY,WAClBb,EAAQZ,EAASiB,WAwBXM,UAAWG,IACT,SACA,UACA,CACE,WAAYf,IAAaX,EAASiB,WAPxC,iCAcA,wBACEO,KAAK,SACLC,QAlCa,WACnBb,EAAQZ,EAASmB,SAkCXI,UAAWG,IACT,SACA,aACA,CACE,WAAYf,IAAaX,EAASmB,SAPxC,4BAcA,wBACEK,KAAK,SACLC,QA5CQ,WACdhB,GAAaD,IA4CPe,UAAWG,IACT,SACA,aACA,CACE,YAAalB,IAPnB,sBAcEG,IAAaX,EAASU,MAAQF,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAxDI,WACZb,EAAQZ,EAASU,MACjBD,GAAY,IAmDN,sBAUJ,cAAC,EAAD,CAAUP,MAAOA,QEnIvByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5ef3c59.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n// eslint-disable-next-line import/no-named-as-default, import/no-named-as-default-member\nimport { Goodlist } from './components/Goodlist';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((f1, f2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return f1.localeCompare(f2);\n\n      case SortType.LENGTH:\n        return f1.length - f2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setType] = useState(SortType.NONE);\n\n  const sortByAlpha = () => {\n    setType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByAlpha}\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverse}\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <Goodlist goods={goods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const Goodlist: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => (\n        <li\n          key={good}\n          data-cy=\"Good\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}